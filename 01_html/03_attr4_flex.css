.container {
  /* flex 기본 용어  */
  /* 주측: main axis */
  /* 교차축: cross-axis */

  /* display: flex는 자식 요소의 정렬 방법을 지정하는 속성  */
  /* display: inline-flex 속성도 있음 */
  /* flex와 inline-flex 요소 차이는 
     /* flex은 부모 요소가 수직으로 쌓임 block요소처럼*/
  /* inline-flex은 부모 요소가 수평으로 쌓임 inline요소처럼*/
  /* display:flex 는 기본적으로 자식 요소들이 왼쪽에서 오른쪽으로  쌓임 */
  /* 즉, 주축의 기본 방향이 좌-> 우 */

  display: flex;
  /* width: 100vw; */
  background-color: antiquewhite;
  /* flex-wrap: wrap; */
  /* width: 350px; */
  /* flex-wrap: nowrap, wrap, wrap-reverse */
  /* flex 속성 사용시 컨테이너의 줄 바꿈을 지정 */
  /* flex-wrap: nowrap;(defaualt) */
  /* flex-wrap: wrap;
  flex-wrap: wrap-reverse; */

  /*flex-diraction: 주축 방향 지정  */
  /* flex-direction: row; (defualt) */
  /* row-reverse: 우-> 좌 쪽으로 자식 요소들 쌓임 */
  /* flex-direction: row-reverse;
   /* column: 위->아래로 자식 요소들 쌓임 */
  /* flex-direction: column; 
   /* column-reverse: 아래-> 위로 자식 요소들 쌓임 */
  /* flex-direction: column-reverse;**/

  /*  justify-content:  주 축 item의 정렬 방법 /배치 방법*/
  /* 
 - justify-content: flex-start(default) -> item을 start지점을 기준으로 나열  
 - justify-content: flex-end-> item을end 지점으로 나열
 - justify-content:  space-around  ->  item들 모든 공백을 동일하게 갓도록 함
 - justify-content: space-evenly   start부터 첫 간격, item의 간격, item 사이 간격, 모두  간격이 다 동일함 
 - justify-content: space-between -> 처음과 마지막 item을 양 끝에 붙이고,나머지  */
  /* justify-content: flex-end; */
  /* justify-content: space-around;
  justify-content: space-evenly; */
  /* justify-content: space-between;
  flex-direction: row;
  height: 350px;
  justify-content: space-evenly;
  flex-wrap: wrap;
    } */
  /* align-items: 교차축 기준으로 item을 어떻게 배치할것인가 */
  /* 
    - align-items: stretch(default)-> container의 교차축을 모두 채우기 위해 늘림
      -> 아이템의 높이/너비가 지정되지 않았을때 자동ㅇ으로 교차축을 채우기 위해 늘어남
    - align-items: flex-start -> 교차축의 시작점으로 정렬
      -> 아이템의 높이/너비 지정되엇을 때 자동으로 정렬됨
    - align-items: flex-end : -> 교차축의 끝점으로 정렬
    - align-items: center : -> 교차축의 중앙에 정렬
    -align-items: baseline: -> 아이템을 텍스트 네이스라인 기중으로 정렬
    */

  /* align-items: flex-end;
  align-items: center;
  align-items: baseline; */
  /* align-content: -> 두 줄 이상에서 교차축 기준으로 아이템들의 정렬 방식 */
  /* 조겅: flex-wrap: wrap 을때 아이템이 2줄 이상을때 교차축 방향 설정 */
  /* align-content: stretch; -> 교차축 방향으로 모두 차치하기 위해 늘어남
  - align-content: flex-start; -> 교차축 방향으로 시작점으로 정렬
  -align-content: flex-end; -> 교차축 방향으로 끝점으로 정렬
  -align-content: center; -> 교차축 방향으로 중앙 정렬 */
  /* align-content: flex-start;
  align-content: flex-end;
  align-content: center; */
  height: 500px;
  width: 500px;
  flex-wrap: wrap;
  flex-direction: column-reverse;
  align-content: center;
  align-items: center;
  justify-content: space-around;
}

.item {
  width: 100px;
  height: 100px;
  font-size: 30px;
  text-align: center;
  line-height: 100px;
}
.item1 {
  /* font-size: 20px; */
  background-color: red;
}
.item2 {
  /* font-size: 40px; */
  background-color: orange;
}
.item3 {
  background-color: yellow;
}
.item4 {
  background-color: yellowgreen;
}
.container.item5 {
  background-color: blue;
}
.container.item6 {
  background-color: pink;
}
.container.item7 {
  background-color: gray;
}
.container.item8 {
  background-color: skyblue;
}
/* 아이템 속성 */
.container2 {
  background-color: #dfdfdf;
  width: 100%;
  height: 400px;
  display: flex;
}
.container2.item {
  width: 50px;
  height: 50px;
}
.container2.item1 {
  background-color: lightcoral;
}
.container2.item2 {
  background-color: lightsalmon;
}
.container2.item3 {
  background-color: lightgreen;
}
.container2.item4 {
  background-color: lightyellow;
}
.container2.item5 {
  background-color: lightblue;
}
